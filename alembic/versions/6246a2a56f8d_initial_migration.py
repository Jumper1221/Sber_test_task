"""initial migration

Revision ID: 6246a2a56f8d
Revises:
Create Date: 2025-09-05 12:36:51.453939

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql  ### НОВОЕ ###

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6246a2a56f8d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Определяем наш ENUM тип один раз, чтобы избежать опечаток
# Имя 'payment_status' взято из вашей модели: SAEnum(PaymentStatus, name="payment_status")
# Значения ('created', 'paid', 'canceled') взяты из вашего класса PaymentStatus
payment_status_enum = postgresql.ENUM(
    "created", "paid", "canceled", name="payment_status", create_type=False
)


def upgrade() -> None:
    # Шаг 1: Создаем тип ENUM (это правильно и остается без изменений)
    payment_status_enum.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column(
            "balance",
            sa.Numeric(precision=14, scale=2),
            server_default=sa.text("0"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "payments",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("sender_id", sa.UUID(), nullable=False),
        sa.Column("recipient_id", sa.UUID(), nullable=False),
        sa.Column("card_last4", sa.String(length=4), nullable=False),
        sa.Column("card_holder", sa.String(length=255), nullable=False),
        sa.Column("amount", sa.Numeric(precision=14, scale=2), nullable=False),
        # --- ИЗМЕНЕНИЕ ЗДЕСЬ ---
        # Используем наш заранее определенный объект `payment_status_enum`
        sa.Column(
            "status",
            payment_status_enum,
            server_default="created",
            nullable=False,
        ),
        # --- КОНЕЦ ИЗМЕНЕНИЯ ---
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("version", sa.Integer(), server_default=sa.text("1"), nullable=False),
        sa.CheckConstraint("amount > 0", name="chk_payments_amount_positive"),
        sa.CheckConstraint("char_length(card_last4) = 4", name="chk_card_last4_len"),
        sa.ForeignKeyConstraint(["recipient_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["sender_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_payments_recipient_id"), "payments", ["recipient_id"], unique=False
    )
    op.create_index(
        "ix_payments_sender_created_at",
        "payments",
        ["sender_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payments_sender_id"), "payments", ["sender_id"], unique=False
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_hash", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "revoked", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_refresh_tokens_user_id"), "refresh_tokens", ["user_id"], unique=False
    )
    op.create_table(
        "payment_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("payment_id", sa.UUID(), nullable=False),
        sa.Column("performed_by", sa.UUID(), nullable=True),
        # --- ИЗМЕНЕНИЕ ЗДЕСЬ (ДЛЯ prev_status) ---
        sa.Column("prev_status", payment_status_enum, nullable=False),
        # --- КОНЕЦ ИЗМЕНЕНИЯ ---
        # --- ИЗМЕНЕНИЕ ЗДЕСЬ (ДЛЯ new_status) ---
        sa.Column("new_status", payment_status_enum, nullable=False),
        # --- КОНЕЦ ИЗМЕНЕНИЯ ---
        sa.Column("amount", sa.Numeric(precision=14, scale=2), nullable=True),
        sa.Column("note", sa.String(length=1024), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["payment_id"], ["payments.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["performed_by"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_payment_logs_payment_id"), "payment_logs", ["payment_id"], unique=False
    )
    op.create_index(
        "ix_payment_logs_payment_id_created_at",
        "payment_logs",
        ["payment_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payment_logs_performed_by"),
        "payment_logs",
        ["performed_by"],
        unique=False,
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_payment_logs_performed_by"), table_name="payment_logs")
    op.drop_index("ix_payment_logs_payment_id_created_at", table_name="payment_logs")
    op.drop_index(op.f("ix_payment_logs_payment_id"), table_name="payment_logs")
    op.drop_table("payment_logs")
    op.drop_index(op.f("ix_refresh_tokens_user_id"), table_name="refresh_tokens")
    op.drop_table("refresh_tokens")
    op.drop_index(op.f("ix_payments_sender_id"), table_name="payments")
    op.drop_index("ix_payments_sender_created_at", table_name="payments")
    op.drop_index(op.f("ix_payments_recipient_id"), table_name="payments")
    op.drop_table("payments")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
    payment_status_enum.drop(op.get_bind())
